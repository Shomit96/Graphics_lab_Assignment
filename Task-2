#include <GL/glut.h>
#include <iostream>
using namespace std;

int centerX = 250, centerY = 300, radius = 80;

void plotPoint(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x + centerX, y + centerY);
    glEnd();
}

void initialize() {
    glClearColor(1.0, 1.0, 1.0, 0.0); // White background
    glColor3f(0.0f, 0.0f, 0.0f);      // Black drawing color
    glPointSize(5.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}

void drawMidpointCircle() {
    int x = 0;
    int y = radius;
    float decision = 1.25 - radius; // 5/4 - r

    plotPoint(x, y);

    while (y > x) {
        if (decision < 0) {
            x++;
            decision += 2 * x + 1;
        } else {
            x++;
            y--;
            decision += 2 * (x - y) + 1;
        }

        // Plot all 8 octants
        plotPoint(x, y);
        plotPoint(-x, y);
        plotPoint(x, -y);
        plotPoint(-x, -y);
        plotPoint(y, x);
        plotPoint(-y, x);
        plotPoint(y, -x);
        plotPoint(-y, -x);
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0);
    glPointSize(1.0);
    drawMidpointCircle();
    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(100, 150);
    glutCreateWindow("Midpoint Circle Algorithm");
    glutDisplayFunc(display);
    initialize();
    glutMainLoop();
}
